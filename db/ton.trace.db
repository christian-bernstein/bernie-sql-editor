2022-03-19 15:07:24 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Methode nicht zulässig für eine Abfrage. Erlaubt sind execute oder executeQuery, nicht jedoch executeUpdate
Method is not allowed for a query. Use execute or executeQuery instead of executeUpdate; SQL statement:
show tables from information_schema [90001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.Prepared.update(Prepared.java:219)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:152)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$executeUpdate$6(DBModule.java:165)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.modules.db.DBModule.executeUpdate(DBModule.java:162)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$11(DBModule.java:257)
	at org.hibernate.jdbc.WorkExecutor.executeWork(WorkExecutor.java:37)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$doWork$1(AbstractSharedSessionContract.java:1068)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.coordinateWork(JdbcCoordinatorImpl.java:306)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1084)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1071)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$12(DBModule.java:253)
	at de.christianbernstein.bernie.modules.db.DatabaseAccessPoint.session(DatabaseAccessPoint.java:64)
	at de.christianbernstein.bernie.modules.db.DBModule.doPush(DBModule.java:253)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$static$13(DBModule.java:272)
	at de.christianbernstein.bernie.shared.discovery.websocket.IPacketHandlerBase._handle(IPacketHandlerBase.java:28)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.handlePacket(SocketServerPrivateAPI.java:121)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.lambda$new$9(SocketServerPrivateAPI.java:96)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:128)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:145)
	at ISocketServerPublicAPIImpl.lambda$onMessage$4(ISocketServerPublicAPIImpl.java:50)
	at de.christianbernstein.bernie.shared.tailwind.API.sync(API.java:52)
	at ISocketServerPublicAPIImpl.onMessage(ISocketServerPublicAPIImpl.java:50)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.StandaloneSocketServer.onMessage(StandaloneSocketServer.java:157)
	at org.java_websocket.server.WebSocketServer.onWebsocketMessage(WebSocketServer.java:673)
	at org.java_websocket.drafts.Draft_6455.processFrameText(Draft_6455.java:885)
	at org.java_websocket.drafts.Draft_6455.processFrame(Draft_6455.java:819)
	at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:379)
	at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:216)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1046)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:1028)
2022-03-19 15:47:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Methode nicht zulässig für eine Abfrage. Erlaubt sind execute oder executeQuery, nicht jedoch executeUpdate
Method is not allowed for a query. Use execute or executeQuery instead of executeUpdate; SQL statement:
show tables from information_schema [90001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.Prepared.update(Prepared.java:219)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:152)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$executeUpdate$6(DBModule.java:166)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.modules.db.DBModule.executeUpdate(DBModule.java:163)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$11(DBModule.java:268)
	at org.hibernate.jdbc.WorkExecutor.executeWork(WorkExecutor.java:37)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$doWork$1(AbstractSharedSessionContract.java:1068)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.coordinateWork(JdbcCoordinatorImpl.java:306)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1084)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1071)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$12(DBModule.java:264)
	at de.christianbernstein.bernie.modules.db.DatabaseAccessPoint.session(DatabaseAccessPoint.java:64)
	at de.christianbernstein.bernie.modules.db.DBModule.doPush(DBModule.java:264)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$static$13(DBModule.java:287)
	at de.christianbernstein.bernie.shared.discovery.websocket.IPacketHandlerBase._handle(IPacketHandlerBase.java:28)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.handlePacket(SocketServerPrivateAPI.java:121)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.lambda$new$9(SocketServerPrivateAPI.java:96)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:128)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:145)
	at ISocketServerPublicAPIImpl.lambda$onMessage$2(ISocketServerPublicAPIImpl.java:40)
	at de.christianbernstein.bernie.shared.tailwind.API.sync(API.java:52)
	at ISocketServerPublicAPIImpl.onMessage(ISocketServerPublicAPIImpl.java:40)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.StandaloneSocketServer.onMessage(StandaloneSocketServer.java:157)
	at org.java_websocket.server.WebSocketServer.onWebsocketMessage(WebSocketServer.java:673)
	at org.java_websocket.drafts.Draft_6455.processFrameText(Draft_6455.java:885)
	at org.java_websocket.drafts.Draft_6455.processFrame(Draft_6455.java:819)
	at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:379)
	at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:216)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1046)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:1028)
2022-03-19 15:50:19 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Methode nicht zulässig für eine Abfrage. Erlaubt sind execute oder executeQuery, nicht jedoch executeUpdate
Method is not allowed for a query. Use execute or executeQuery instead of executeUpdate; SQL statement:
show tables from information_schema [90001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.Prepared.update(Prepared.java:219)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:152)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$executeUpdate$6(DBModule.java:166)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.modules.db.DBModule.executeUpdate(DBModule.java:163)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$11(DBModule.java:268)
	at org.hibernate.jdbc.WorkExecutor.executeWork(WorkExecutor.java:37)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$doWork$1(AbstractSharedSessionContract.java:1068)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.coordinateWork(JdbcCoordinatorImpl.java:306)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1084)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1071)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$12(DBModule.java:264)
	at de.christianbernstein.bernie.modules.db.DatabaseAccessPoint.session(DatabaseAccessPoint.java:64)
	at de.christianbernstein.bernie.modules.db.DBModule.doPush(DBModule.java:264)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$static$13(DBModule.java:287)
	at de.christianbernstein.bernie.shared.discovery.websocket.IPacketHandlerBase._handle(IPacketHandlerBase.java:28)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.handlePacket(SocketServerPrivateAPI.java:121)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.lambda$new$9(SocketServerPrivateAPI.java:96)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:128)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:145)
	at ISocketServerPublicAPIImpl.lambda$onMessage$2(ISocketServerPublicAPIImpl.java:40)
	at de.christianbernstein.bernie.shared.tailwind.API.sync(API.java:52)
	at ISocketServerPublicAPIImpl.onMessage(ISocketServerPublicAPIImpl.java:40)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.StandaloneSocketServer.onMessage(StandaloneSocketServer.java:157)
	at org.java_websocket.server.WebSocketServer.onWebsocketMessage(WebSocketServer.java:673)
	at org.java_websocket.drafts.Draft_6455.processFrameText(Draft_6455.java:885)
	at org.java_websocket.drafts.Draft_6455.processFrame(Draft_6455.java:819)
	at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:379)
	at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:216)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1046)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:1028)
2022-03-19 15:53:54 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Methode nicht zulässig für eine Abfrage. Erlaubt sind execute oder executeQuery, nicht jedoch executeUpdate
Method is not allowed for a query. Use execute or executeQuery instead of executeUpdate; SQL statement:
show tables from information_schema [90001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.Prepared.update(Prepared.java:219)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:152)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$executeUpdate$6(DBModule.java:166)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.modules.db.DBModule.executeUpdate(DBModule.java:163)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$11(DBModule.java:268)
	at org.hibernate.jdbc.WorkExecutor.executeWork(WorkExecutor.java:37)
	at org.hibernate.internal.AbstractSharedSessionContract.lambda$doWork$1(AbstractSharedSessionContract.java:1068)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.coordinateWork(JdbcCoordinatorImpl.java:306)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1084)
	at org.hibernate.internal.AbstractSharedSessionContract.doWork(AbstractSharedSessionContract.java:1071)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$doPush$12(DBModule.java:264)
	at de.christianbernstein.bernie.modules.db.DatabaseAccessPoint.session(DatabaseAccessPoint.java:64)
	at de.christianbernstein.bernie.modules.db.DBModule.doPush(DBModule.java:264)
	at de.christianbernstein.bernie.modules.db.DBModule.lambda$static$13(DBModule.java:287)
	at de.christianbernstein.bernie.shared.discovery.websocket.IPacketHandlerBase._handle(IPacketHandlerBase.java:28)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.handlePacket(SocketServerPrivateAPI.java:121)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.SocketServerPrivateAPI.lambda$new$9(SocketServerPrivateAPI.java:96)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:128)
	at de.christianbernstein.bernie.shared.tailwind.Gate.sync(Gate.java:145)
	at ISocketServerPublicAPIImpl.lambda$onMessage$2(ISocketServerPublicAPIImpl.java:40)
	at de.christianbernstein.bernie.shared.tailwind.API.sync(API.java:52)
	at ISocketServerPublicAPIImpl.onMessage(ISocketServerPublicAPIImpl.java:40)
	at de.christianbernstein.bernie.shared.discovery.websocket.server.StandaloneSocketServer.onMessage(StandaloneSocketServer.java:157)
	at org.java_websocket.server.WebSocketServer.onWebsocketMessage(WebSocketServer.java:673)
	at org.java_websocket.drafts.Draft_6455.processFrameText(Draft_6455.java:885)
	at org.java_websocket.drafts.Draft_6455.processFrame(Draft_6455.java:819)
	at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:379)
	at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:216)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1046)
	at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:1028)
2022-03-21 16:33:26 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.session(H2Repository.java:150)
	at de.christianbernstein.bernie.modules.user.UserModule.hasAccount(UserModule.java:70)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:94)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$18(Ton.java:398)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:397)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$11(Ton.java:189)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:176)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$5(Ton.java:127)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:123)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:202)
	at de.christianbernstein.bernie.ses.bin.TonLauncher.main(TonLauncher.java:64)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 97 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 91 more
2022-03-21 16:33:26 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:141)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$18(Ton.java:398)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:397)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$11(Ton.java:189)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:176)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$5(Ton.java:127)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:123)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:202)
	at de.christianbernstein.bernie.ses.bin.TonLauncher.main(TonLauncher.java:64)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 97 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 91 more
2022-03-21 16:33:26 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:79)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:103)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$18(Ton.java:398)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:397)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$11(Ton.java:189)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:176)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$5(Ton.java:127)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:123)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:202)
	at de.christianbernstein.bernie.ses.bin.TonLauncher.main(TonLauncher.java:64)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 96 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/dev/bernie-sql-editor/db/ton.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 90 more
2022-03-30 21:52:44 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedByInterruptException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedByInterruptException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.session(H2Repository.java:150)
	at de.christianbernstein.bernie.modules.user.UserModule.hasAccount(UserModule.java:70)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:94)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:394)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 104 more
2022-03-30 21:52:44 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "USER_DATA" besteht bereits
Table "USER_DATA" already exists; SQL statement:
create table user_data (id varchar(255) not null, email varchar(255), firstname varchar(255), lastActive timestamp, lastname varchar(255), password varchar(255), userEntrySetupDate timestamp, username varchar(255), primary key (id)) [42101-200]
2022-03-30 21:52:44 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:52:44 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:52:45 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:52:45 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:52:45 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:79)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 103 more
2022-03-30 21:52:45 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "PROJECTDATA" besteht bereits
Table "PROJECTDATA" already exists; SQL statement:
create table ProjectData (id varchar(255) not null, creatorUserID varchar(255), description TEXT, edits integer not null, lastEdited timestamp, stator boolean not null, title varchar(255), primary key (id)) [42101-200]
2022-03-30 21:52:45 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 21:52:45 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 21:52:45 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 21:52:45 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 21:52:45 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 21:52:54 database: could not close the database
org.h2.message.DbException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.engine.Database.close(Database.java:1382)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 4 more
Caused by: org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 8192 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 21:53:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedByInterruptException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedByInterruptException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.session(H2Repository.java:150)
	at de.christianbernstein.bernie.modules.user.UserModule.hasAccount(UserModule.java:70)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:94)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:394)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 104 more
2022-03-30 21:53:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "USER_DATA" besteht bereits
Table "USER_DATA" already exists; SQL statement:
create table user_data (id varchar(255) not null, email varchar(255), firstname varchar(255), lastActive timestamp, lastname varchar(255), password varchar(255), userEntrySetupDate timestamp, username varchar(255), primary key (id)) [42101-200]
2022-03-30 21:53:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:53:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:53:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:53:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:53:11 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:79)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 103 more
2022-03-30 21:53:11 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "PROJECTDATA" besteht bereits
Table "PROJECTDATA" already exists; SQL statement:
create table ProjectData (id varchar(255) not null, creatorUserID varchar(255), description TEXT, edits integer not null, lastEdited timestamp, stator boolean not null, title varchar(255), primary key (id)) [42101-200]
2022-03-30 21:53:11 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 21:53:11 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 21:53:11 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 21:53:11 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:481)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:480)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 21:53:11 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 21:54:20 database: could not close the database
org.h2.message.DbException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.engine.Database.close(Database.java:1382)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 4 more
Caused by: org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 21:54:47 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedByInterruptException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedByInterruptException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.session(H2Repository.java:150)
	at de.christianbernstein.bernie.modules.user.UserModule.hasAccount(UserModule.java:70)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:94)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:394)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 104 more
2022-03-30 21:54:47 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "USER_DATA" besteht bereits
Table "USER_DATA" already exists; SQL statement:
create table user_data (id varchar(255) not null, email varchar(255), firstname varchar(255), lastActive timestamp, lastname varchar(255), password varchar(255), userEntrySetupDate timestamp, username varchar(255), primary key (id)) [42101-200]
2022-03-30 21:54:47 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:54:47 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:54:48 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:54:48 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 21:54:48 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:79)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 103 more
2022-03-30 21:54:48 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "PROJECTDATA" besteht bereits
Table "PROJECTDATA" already exists; SQL statement:
create table ProjectData (id varchar(255) not null, creatorUserID varchar(255), description TEXT, edits integer not null, lastEdited timestamp, stator boolean not null, title varchar(255), primary key (id)) [42101-200]
2022-03-30 21:54:48 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 21:54:48 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 21:54:48 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 21:54:48 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:122)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 21:54:48 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 22:00:34 database: could not close the database
org.h2.message.DbException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.engine.Database.close(Database.java:1382)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 4 more
Caused by: org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 32768 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 22:01:57 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedByInterruptException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedByInterruptException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.session(H2Repository.java:150)
	at de.christianbernstein.bernie.modules.user.UserModule.hasAccount(UserModule.java:70)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:94)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:394)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 104 more
2022-03-30 22:01:58 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "USER_DATA" besteht bereits
Table "USER_DATA" already exists; SQL statement:
create table user_data (id varchar(255) not null, email varchar(255), firstname varchar(255), lastActive timestamp, lastname varchar(255), password varchar(255), userEntrySetupDate timestamp, username varchar(255), primary key (id)) [42101-200]
2022-03-30 22:01:58 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:01:58 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:01:58 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:01:58 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:01:58 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:79)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 103 more
2022-03-30 22:01:58 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "PROJECTDATA" besteht bereits
Table "PROJECTDATA" already exists; SQL statement:
create table ProjectData (id varchar(255) not null, creatorUserID varchar(255), description TEXT, edits integer not null, lastEdited timestamp, stator boolean not null, title varchar(255), primary key (id)) [42101-200]
2022-03-30 22:01:58 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 22:01:58 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 22:01:58 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 22:01:58 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 22:01:58 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 22:02:39 database: could not close the database
org.h2.message.DbException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.engine.Database.close(Database.java:1382)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 4 more
Caused by: org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 22:03:00 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedByInterruptException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedByInterruptException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.session(H2Repository.java:150)
	at de.christianbernstein.bernie.modules.user.UserModule.hasAccount(UserModule.java:70)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:94)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:168)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:394)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 104 more
2022-03-30 22:03:01 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "USER_DATA" besteht bereits
Table "USER_DATA" already exists; SQL statement:
create table user_data (id varchar(255) not null, email varchar(255), firstname varchar(255), lastActive timestamp, lastname varchar(255), password varchar(255), userEntrySetupDate timestamp, username varchar(255), primary key (id)) [42101-200]
2022-03-30 22:03:01 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:03:01 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.plainCreateAccount(UserModule.java:98)
	at de.christianbernstein.bernie.modules.user.UserModule.createRootUser(UserModule.java:179)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:54)
	at de.christianbernstein.bernie.modules.user.UserModule.boot(UserModule.java:36)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:03:01 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:03:01 jdbc[5]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.loader.Loader.doQuery(Loader.java:971)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:176)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at de.christianbernstein.bernie.shared.db.H2Repository.nq(H2Repository.java:142)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserDataOfUsername(UserModule.java:144)
	at de.christianbernstein.bernie.modules.user.UserModule.getUserOfUsername(UserModule.java:159)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:172)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 95 more
2022-03-30 22:03:01 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.storesLowerCaseIdentifiers(JdbcDatabaseMetaData.java:2619)
	at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:77)
	at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:1947)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:253)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at de.christianbernstein.bernie.shared.db.H2Repository.getSessionFactory(H2Repository.java:60)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:79)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 103 more
2022-03-30 22:03:01 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabelle "PROJECTDATA" besteht bereits
Table "PROJECTDATA" already exists; SQL statement:
create table ProjectData (id varchar(255) not null, creatorUserID varchar(255), description TEXT, edits integer not null, lastEdited timestamp, stator boolean not null, title varchar(255), primary key (id)) [42101-200]
2022-03-30 22:03:01 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 22:03:01 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(AbstractEntityPersister.java:1580)
	at org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(StatefulPersistenceContext.java:320)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:306)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:59)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:85)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:616)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:609)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:604)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:81)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 93 more
2022-03-30 22:03:01 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 22:03:01 jdbc[6]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Eingabe/Ausgabe: "java.nio.channels.ClosedChannelException"; "Can not get size"
IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME=? [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcConnection.getQueryTimeout(JdbcConnection.java:800)
	at org.h2.jdbc.JdbcStatement.getQueryTimeout(JdbcStatement.java:681)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:186)
	at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:109)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3515)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3359)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3773)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:201)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:723)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1349)
	at de.christianbernstein.bernie.shared.db.H2Repository.save(H2Repository.java:82)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createProject(ProjectModule.java:95)
	at de.christianbernstein.bernie.modules.project.ProjectModule.createInternalDatabaseProject(ProjectModule.java:169)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:73)
	at de.christianbernstein.bernie.modules.project.ProjectModule.boot(ProjectModule.java:44)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$3(Module.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at de.christianbernstein.bernie.shared.module.Module.lambda$new$4(Module.java:154)
	at de.christianbernstein.bernie.shared.module.Module.lambda$fireInternalContext$0(Module.java:95)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.module.Module.fireInternalContext(Module.java:95)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$8(Engine.java:303)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.shared.module.Engine.lambda$engage$9(Engine.java:302)
	at java.base/java.util.Optional.ifPresent(Optional.java:176)
	at de.christianbernstein.bernie.shared.module.Engine.engage(Engine.java:288)
	at de.christianbernstein.bernie.shared.module.Engine.register(Engine.java:256)
	at de.christianbernstein.bernie.ses.processors.ModuleJPAProcessor.lambda$static$0(ModuleJPAProcessor.java:42)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$16(JavaReflectiveAnnotationAPI.java:494)
	at de.christianbernstein.bernie.shared.misc.Unsafe.unsafe(Unsafe.java:47)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$17(JavaReflectiveAnnotationAPI.java:494)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1624)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.lambda$process$18(JavaReflectiveAnnotationAPI.java:493)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at de.christianbernstein.bernie.shared.reflection.JavaReflectiveAnnotationAPI$JRA.process(JavaReflectiveAnnotationAPI.java:461)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$initJRA$20(Ton.java:483)
	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)
	at de.christianbernstein.bernie.ses.bin.Ton.initJRA(Ton.java:482)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$startInDefaultMode$13(Ton.java:235)
	at de.christianbernstein.bernie.shared.misc.Utils.durationMonitoredExecution(Utils.java:202)
	at de.christianbernstein.bernie.ses.bin.Ton.startInDefaultMode(Ton.java:221)
	at de.christianbernstein.bernie.ses.bin.Ton.lambda$start$6(Ton.java:141)
	at de.christianbernstein.bernie.shared.document.Document.ifPresentOr(Document.java:579)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:135)
	at de.christianbernstein.bernie.ses.bin.Ton.start(Ton.java:250)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$restart$4(Console.java:123)
	at de.christianbernstein.bernie.shared.misc.IFluently.me(IFluently.java:35)
	at de.christianbernstein.bernie.shared.misc.IFluently.$(IFluently.java:49)
	at de.christianbernstein.bernie.ses.bin.Console.restart(Console.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.lambda$handle$6(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:63)
	at de.christianbernstein.bernie.shared.misc.Unsafe.specializedTryCatch(Unsafe.java:77)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria$1.handle(GloriaAPI.java:1693)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$DefaultModules$4.handle(GloriaAPI.java:2664)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1629)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1528)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1523)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1518)
	at de.christianbernstein.bernie.shared.gloria.GloriaAPI$Gloria.submit(GloriaAPI.java:1512)
	at de.christianbernstein.bernie.ses.bin.Console.lambda$console$2(Console.java:92)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:379)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 96 more
2022-03-30 22:03:01 database: flush
org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2022-03-30 23:13:25 database: could not close the database
org.h2.message.DbException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.engine.Database.close(Database.java:1382)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]"
General error: "Allgemeiner Fehler: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]""
General error: ""java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 4 more
Caused by: org.h2.message.DbException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Allgemeiner Fehler: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]"
General error: "java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:C:/dev/bernie-sql-editor/db/ton.mv.db failed; length 4096 at 28672 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:156)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:836)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
